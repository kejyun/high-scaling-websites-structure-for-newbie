<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>High Scaling Websites 大型網站架構菜雞修煉場 – 資料庫</title>
    <link>https://high-scaling-websites-structure-for-newbie.kejyun.com/categories/%E8%B3%87%E6%96%99%E5%BA%AB/</link>
    <description>Recent content in 資料庫 on High Scaling Websites 大型網站架構菜雞修煉場</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh</language>
    <lastBuildDate>Sat, 17 Apr 2021 08:50:29 +0800</lastBuildDate>
    
	  <atom:link href="https://high-scaling-websites-structure-for-newbie.kejyun.com/categories/%E8%B3%87%E6%96%99%E5%BA%AB/index.xml" rel="self" type="application/rss+xml" />
    
    
      
        
      
    
    
    <item>
      <title>Docs: 資料排列組合</title>
      <link>https://high-scaling-websites-structure-for-newbie.kejyun.com/docs/database/data-permutations/</link>
      <pubDate>Sat, 17 Apr 2021 08:50:29 +0800</pubDate>
      
      <guid>https://high-scaling-websites-structure-for-newbie.kejyun.com/docs/database/data-permutations/</guid>
      <description>
        
        
        &lt;p&gt;在使用 MySQL 或 PostgreSQL 資料庫的時候，我們常常會使用 Auto Increment 的整數去當作我們的鍵值，Int 總共有 &lt;code&gt;4294967295&lt;/code&gt; 種排列組合方式，而 BigInt 則總共有 &lt;code&gt;18446744073709551615&lt;/code&gt; 種排列組合方式&lt;/p&gt;
&lt;p&gt;使用 Auto Increment 的好處是：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;可以避免每次的鍵值都是不同的，不需要再做額外的欄位資料檢查是否重複&lt;/li&gt;
&lt;li&gt;可以依照整數順序去判斷資料新增的順序&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;但這樣也有壞處：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;資料被刪除後，空出來的鍵值很難被管理，會造成不必要的浪費
&lt;ul&gt;
&lt;li&gt;e.g. Queue 資料&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;總資料量被限制，當我們預期資料很有可能超過整數欄位的限制時，資料量超過時還需要處理溢位問題
&lt;ul&gt;
&lt;li&gt;e.g. 很多的 Queue 資料&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;所以若預期資料量很大時，我們會傾向使用字串去當作資料表的鍵值，單一整數的資料排列組合有 10 種 &lt;code&gt;（0-9）&lt;/code&gt;，而單一字串的資料排列組合有 36 種&lt;code&gt;（0-9 A-Z）&lt;/code&gt;，雖然整數欄位在資料表搜尋的速度比字串快很多，但是這個是沒辦法的必要之惡。&lt;/p&gt;
&lt;h2 id=&#34;字串排列組合&#34;&gt;字串排列組合&lt;/h2&gt;
&lt;p&gt;在資料庫儲存的字串資料是不區分大小寫的，所以若有一個 Primary 或 Unique 的鍵值，裡面是沒辦法同時儲存 &lt;code&gt;AA&lt;/code&gt;、&lt;code&gt;Aa&lt;/code&gt;、&lt;code&gt;aA&lt;/code&gt; 或 &lt;code&gt;aa&lt;/code&gt; 的，所以我們字串鍵值的排列組合只能用不區分大小寫 36 種 &lt;code&gt;(0-9 A-Z)&lt;/code&gt; 排列組合去計算。&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;字串長度&lt;/th&gt;
&lt;th&gt;排列組合 (不區分大小寫)&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;td&gt;36&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;2&lt;/td&gt;
&lt;td&gt;1,296&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;3&lt;/td&gt;
&lt;td&gt;46,656&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;4&lt;/td&gt;
&lt;td&gt;1,679,616&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;5&lt;/td&gt;
&lt;td&gt;60,466,176&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;6&lt;/td&gt;
&lt;td&gt;2,176,782,336&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;7&lt;/td&gt;
&lt;td&gt;78,364,164,096&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;8&lt;/td&gt;
&lt;td&gt;2,821,109,907,456&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;9&lt;/td&gt;
&lt;td&gt;101,559,956,668,416&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;10&lt;/td&gt;
&lt;td&gt;3,656,158,440,062,980&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;11&lt;/td&gt;
&lt;td&gt;131,621,703,842,267,000&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;12&lt;/td&gt;
&lt;td&gt;4,738,381,338,321,620,000&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;13&lt;/td&gt;
&lt;td&gt;170,581,728,179,578,000,000&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;14&lt;/td&gt;
&lt;td&gt;6,140,942,214,464,820,000,000&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;15&lt;/td&gt;
&lt;td&gt;221,073,919,720,733,000,000,000&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;16&lt;/td&gt;
&lt;td&gt;7,958,661,109,946,400,000,000,000&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;17&lt;/td&gt;
&lt;td&gt;286,511,799,958,070,000,000,000,000&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;18&lt;/td&gt;
&lt;td&gt;10,314,424,798,490,500,000,000,000,000&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;19&lt;/td&gt;
&lt;td&gt;371,319,292,745,659,000,000,000,000,000&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;20&lt;/td&gt;
&lt;td&gt;13,367,494,538,843,700,000,000,000,000,000&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;21&lt;/td&gt;
&lt;td&gt;481,229,803,398,374,000,000,000,000,000,000&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;22&lt;/td&gt;
&lt;td&gt;17,324,272,922,341,500,000,000,000,000,000,000&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;23&lt;/td&gt;
&lt;td&gt;623,673,825,204,293,000,000,000,000,000,000,000&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;24&lt;/td&gt;
&lt;td&gt;22,452,257,707,354,600,000,000,000,000,000,000,000&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;25&lt;/td&gt;
&lt;td&gt;808,281,277,464,764,000,000,000,000,000,000,000,000&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;26&lt;/td&gt;
&lt;td&gt;29,098,125,988,731,500,000,000,000,000,000,000,000,000&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;27&lt;/td&gt;
&lt;td&gt;1,047,532,535,594,330,000,000,000,000,000,000,000,000,000&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;28&lt;/td&gt;
&lt;td&gt;37,711,171,281,396,000,000,000,000,000,000,000,000,000,000&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;29&lt;/td&gt;
&lt;td&gt;1,357,602,166,130,260,000,000,000,000,000,000,000,000,000,000&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;30&lt;/td&gt;
&lt;td&gt;48,873,677,980,689,300,000,000,000,000,000,000,000,000,000,000&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;31&lt;/td&gt;
&lt;td&gt;1,759,452,407,304,810,000,000,000,000,000,000,000,000,000,000,000&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;32&lt;/td&gt;
&lt;td&gt;63,340,286,662,973,300,000,000,000,000,000,000,000,000,000,000,000&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;33&lt;/td&gt;
&lt;td&gt;2,280,250,319,867,040,000,000,000,000,000,000,000,000,000,000,000,000&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;34&lt;/td&gt;
&lt;td&gt;82,089,011,515,213,400,000,000,000,000,000,000,000,000,000,000,000,000&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;35&lt;/td&gt;
&lt;td&gt;2,955,204,414,547,680,000,000,000,000,000,000,000,000,000,000,000,000,000&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;36&lt;/td&gt;
&lt;td&gt;106,387,358,923,717,000,000,000,000,000,000,000,000,000,000,000,000,000,000&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;37&lt;/td&gt;
&lt;td&gt;3,829,944,921,253,800,000,000,000,000,000,000,000,000,000,000,000,000,000,000&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;38&lt;/td&gt;
&lt;td&gt;137,878,017,165,137,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;39&lt;/td&gt;
&lt;td&gt;4,963,608,617,944,920,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;40&lt;/td&gt;
&lt;td&gt;178,689,910,246,017,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;blockquote&gt;
&lt;p&gt;只要字串長度大於 13 時，我們擁有的資料排列組合就會超過 BigInt 的 &lt;code&gt;18446744073709551615&lt;/code&gt; 排列組合&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;在使用字串當做鍵值時，在我們每次新增資料手動產生字串鍵值時，我們都要再去資料庫檢查看看此鍵值是否存在，再新增進去，且我們需要額外做新增資料造成 Duplicate Key 的例外狀況處理&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;在我們字串很長時雖然發生碰撞的機率很低，但為了系統資料的安全完整性，還是需要做檢查的步驟，並在頻繁被通知到鍵值衝突的狀況時，就要考慮增加字串長度，減少鍵值碰撞機率了&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;參考資料&#34;&gt;參考資料&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://blog.kejyun.com/2012/09/MySQL-Field-Data-Type-Description-And-Compare.html&#34;&gt;MySQL資料型態描述與比較&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.percona.com/blog/2014/12/19/store-uuid-optimized-way/&#34;&gt;Store UUID in an optimized way&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.cw.com.tw/article/article.action?id=5063028&#34;&gt;《江南Style》如何衝破YouTube的計數器&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.slideshare.net/yftzeng/btreepart-1&#34;&gt;資料庫索引數據結構及主鍵設計(b+tree)(part 1)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

      </description>
    </item>
    
    <item>
      <title>Docs: 資料類型</title>
      <link>https://high-scaling-websites-structure-for-newbie.kejyun.com/docs/database/mysql/data-type/</link>
      <pubDate>Sat, 17 Apr 2021 08:50:29 +0800</pubDate>
      
      <guid>https://high-scaling-websites-structure-for-newbie.kejyun.com/docs/database/mysql/data-type/</guid>
      <description>
        
        
        &lt;h2 id=&#34;越小越好&#34;&gt;越小越好&lt;/h2&gt;
&lt;p&gt;要使用能夠用來正確儲存資料的最小類型的資料型態，要確保不會低估要儲存的資料大小，因為當資料可以確定用比較少的資料去儲存的時候，所&lt;code&gt;使用的空間&lt;/code&gt;也會更少，所&lt;code&gt;需要的索引空間&lt;/code&gt;也會越少，取得資料所需要的&lt;code&gt;計算時間&lt;/code&gt;也會越短。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;在可以用&lt;code&gt;CHAR(20)&lt;/code&gt;去儲存資料時，就不要用&lt;code&gt;CHAR(200)&lt;/code&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;在可以用&lt;code&gt;VARCHAR(20)&lt;/code&gt;去儲存資料時，就不要用&lt;code&gt;VARCHAR(200)&lt;/code&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;在可以用&lt;code&gt;TINYINT&lt;/code&gt;去儲存資料時，就不要用&lt;code&gt;INT&lt;/code&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;在可以用&lt;code&gt;TEXT&lt;/code&gt;去儲存資料時，就不要用&lt;code&gt;LONGTEXT&lt;/code&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;在可以用&lt;code&gt;BLOB&lt;/code&gt;去儲存資料時，就不要用&lt;code&gt;LONGBLOB&lt;/code&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;越簡單越好&#34;&gt;越簡單越好&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;整數（INT）&amp;gt; 固定字串（CHAR）&amp;gt; 變動字串（VARCHAR）&amp;gt; 文字（TEXT）&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;越簡單的資料類型，資料庫所需要用來建立索引的效率越好，因為資料類型越複雜代表資料的排列組合越多，所以需要更大的索引及計算去取得資料&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;在可以用整數（INT）去儲存資料時，就不要用固定字串（CHAR）&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;在可以用固定字串（CHAR）去儲存資料時，就不要用變動字串（VARCHAR）&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;在可以用變動字串（VARCHAR）去儲存資料時，就不要用文字（TEXT）&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;盡量不使用null&#34;&gt;盡量不使用NULL&lt;/h2&gt;
&lt;p&gt;若非必要儲存NULL的資料，否則要盡可能的把資料欄位設定為NOT NULL，資料庫很難最佳化有NULL資料欄位的查詢，可以NULL的資料欄位需要更多的儲存空間，資料庫還需要對其進行特殊處理，而當有NULL資料欄位使用&lt;code&gt;索引（INDEX）&lt;/code&gt;的時候，每一條的索引紀錄必需要額外紀錄資料，導致查詢時索引的效率降低。&lt;/p&gt;
&lt;p&gt;若真的要儲存NULL，在&lt;code&gt;不影響原有的資料&lt;/code&gt;的情況下，可以考慮用&lt;code&gt;0&lt;/code&gt;、&lt;code&gt;特殊值&lt;/code&gt;&amp;hellip;等等之類的值去代替，可以用來區別是否為NULL&lt;/p&gt;
&lt;h2 id=&#34;結論&#34;&gt;結論&lt;/h2&gt;
&lt;p&gt;一切的資料類型都只能看自己應用的需求去決定，如果沒辦法還是要用比較複雜的資料類型，那還是必須要用，資料的完整性比任何的東西都重要多了，效率就想辦法用&lt;code&gt;增加機器&lt;/code&gt;或者是&lt;code&gt;優化資料表結構&lt;/code&gt;&amp;hellip;等等的其他方式去達成，不要為了效率增加而強迫使用特定的資料類型，這樣反而是因噎廢食。&lt;/p&gt;
&lt;h2 id=&#34;參考資料&#34;&gt;參考資料&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://blog.kejyun.com/2012/12/Tips-For-Use-MySQL-With-High-Performance.html&#34;&gt;KeJyun學習日誌: 提高存取MySQL效率小技巧&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

      </description>
    </item>
    
    <item>
      <title>Docs: MySQL</title>
      <link>https://high-scaling-websites-structure-for-newbie.kejyun.com/docs/database/mysql/</link>
      <pubDate>Sat, 17 Apr 2021 08:50:29 +0800</pubDate>
      
      <guid>https://high-scaling-websites-structure-for-newbie.kejyun.com/docs/database/mysql/</guid>
      <description>
        
        
        
      </description>
    </item>
    
    <item>
      <title>Docs: SQL 語法</title>
      <link>https://high-scaling-websites-structure-for-newbie.kejyun.com/docs/database/mysql/sql/</link>
      <pubDate>Sat, 17 Apr 2021 08:50:29 +0800</pubDate>
      
      <guid>https://high-scaling-websites-structure-for-newbie.kejyun.com/docs/database/mysql/sql/</guid>
      <description>
        
        
        &lt;h2 id=&#34;指定使用索引&#34;&gt;指定使用索引&lt;/h2&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;SELECT&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;id&lt;/span&gt;
&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;FROM&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;data&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;USE&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;INDEX&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;type&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt;
&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;WHERE&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;type&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;12345&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;AND&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;level&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;3&lt;/span&gt;
&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;ORDER&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;BY&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;id&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;在下SQL語法的時候，有時某些語法使用某些索引執行效率會比較好，可是有時候MySQL沒辦法替我們選擇一個最適合的索引，導致執行的效率很慢（slow query），所以我們必須使用USE INDEX去指定執行效率好的索引，以提升效率。&lt;/p&gt;
&lt;h2 id=&#34;少用-join多用幾次-select-撈取大量資料&#34;&gt;少用 JOIN，多用幾次 SELECT 撈取大量資料&lt;/h2&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;SELECT&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;user&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;id&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;user&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;name&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;post&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;id&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;post&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;content&lt;/span&gt;
&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;FROM&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;user&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;post&lt;/span&gt;
&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;WHERE&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;user&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;id&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;post&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;user_id&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;......&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;我們在撈取使用者的文章資訊的時候，我們可能會用 JOIN 去撈取我們要的資料，這樣很直覺，只是當使用者資料有&lt;code&gt;10000&lt;/code&gt;筆，而文章有&lt;code&gt;99999&lt;/code&gt;筆，像這種有大量資料時候的話，使用 JOIN 對於資料存取真的是惡夢，因為 JOIN 過後表示會有 &lt;code&gt;10000x99999=999990000&lt;/code&gt; 筆資料，然後再從這麼大量的資料中去撈取 WHERE 判斷式中指定的資料，在資料庫伺服器記憶體不夠的時候鐵定會炸掉。&lt;/p&gt;
&lt;p&gt;解決方式是我們可以分批撈取使用者的資料，以及文章的資料&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;SELECT&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;user&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;id&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;user&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;name&lt;/span&gt;
&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;FROM&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;user&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;SELECT&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;id&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;content&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;user_id&lt;/span&gt;
&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;FROM&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;post&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;在使用者資料資料撈取出來之後，使用迴圈將使用者存成陣列，但是「陣列的索引」是使用可以識別的「使用者編號（user.id）」當作索引值。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-php&#34; data-lang=&#34;php&#34;&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;&amp;lt;?&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;php&lt;/span&gt;
&lt;span style=&#34;color:#000&#34;&gt;$user&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#39;user.id&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;]&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;array&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;();&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;在撈取文章資料後，必須將撈取的文章指定給該文章的作者（使用者），而我們撈取的使用有撈取「使用者編號（user.id）」，所以可以透過這個資料，將文章存到使用者資料下的文章陣列。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-php&#34; data-lang=&#34;php&#34;&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;&amp;lt;?&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;php&lt;/span&gt;
&lt;span style=&#34;color:#000&#34;&gt;$user&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;$post&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#39;user_id&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;]][&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#39;post&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;]&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;$post_array&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;透過分次撈取，本來的 &lt;code&gt;10000x99999=999990000&lt;/code&gt; 筆資料，就會變成 &lt;code&gt;10000+99999=109999&lt;/code&gt; 筆資料，記憶體消耗降低極大下，也可以達到同樣的效果&lt;/p&gt;
&lt;h3 id=&#34;後記&#34;&gt;後記&lt;/h3&gt;
&lt;p&gt;JOIN 在資料庫幾乎是必學的語法，讓資料表的正規化，避免資料冗余，在查詢的時候也可以透過 JOIN 組合出想要的資料，所以 JOIN 對於資料庫正規化有它的用途，但資料庫的發展的初期中，還沒有像現在有用到巨量的資料（Google、Facebook、Twitter &amp;hellip; etc），所以在流量&amp;amp;資料量小的時候，資料庫在 JOIN 時的查詢回應速度通常差沒幾毫秒 （0.01~0.05毫秒），所以都在可接受的範圍，但現在大型網站一天都好幾千萬的存取量，假如每天有 1000 萬的存取次數，而每個地方都慢了 0.05 毫秒，總共就會慢了 &lt;code&gt;10,000,000 x 0.05 = 500,000 毫秒 = 500 秒&lt;/code&gt;，在我們要求每次回應時間最差都要在 1 ~ 2 秒內回應，若是像 Google、Facebook 這樣的大型服務，要求可能都要在 0.1 秒以內，這樣慢的時間可能會讓使用者等到不耐煩，若 $$ 多多加機器僅能簡單應付巨量級的查詢，沒辦法解決 JOIN 所造成的查詢瓶頸，所以在巨量級資料的情況下，幾乎很少會使用 JOIN 的方式去查詢所有的資料出來，天下武功，無堅不摧，唯快不破。&lt;/p&gt;
&lt;h2 id=&#34;更新或刪除大量範圍的資料請用主鍵去更新&#34;&gt;更新或刪除大量範圍的資料，請用主鍵去更新&lt;/h2&gt;
&lt;p&gt;我們可能會想要一次異動大範圍的資料，若以社群網站的&lt;code&gt;通知（Notification）&lt;/code&gt;來說，我們希望在使用者點選通知列表後，將所有的通知從未讀狀態變更為已讀，我們可以很容易地想到用這樣的 SQL 語法去進行更新：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;UPDATE&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;`&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;notification&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;`&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;SET&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;status&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;已讀&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;WHERE&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;created_at&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;&amp;lt;&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#39;現在時間&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;若我們要刪除大量的資料時，我們也可能用這樣的 SQL 語法去刪除資料：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;DELETE&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;FROM&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;`&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;backup&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;`&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;WHERE&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;created_at&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;&amp;lt;&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#39;現在時間&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;但是在這樣的條件為範圍的語法，資料庫會需要一筆一筆的去比對資料是否為設定條件的範圍，若為&lt;code&gt;交易&lt;/code&gt;的資料，資料庫會將資料進行鎖定禁止讀取，有可能鎖定一些非我們要處理的資料，若處理時間過久，可能會導致撈取資料的反應時間過久。&lt;/p&gt;
&lt;p&gt;所以通常為了避免&lt;code&gt;鎖定不必要資料&lt;/code&gt;的情況發生，我們可以試著先把資料撈取出來，再透過&lt;code&gt;明確的主鍵&lt;/code&gt;去指定哪些異動的資料需要被鎖定，而不影響其他的資料。&lt;/p&gt;
&lt;h3 id=&#34;更新資料較佳作法&#34;&gt;更新資料（較佳作法）&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;-- 先撈取資料
&lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;SELECT&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;`&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;notification&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;`&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;WHERE&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;status&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;未讀&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;AND&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;created_at&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;&amp;lt;&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#39;現在時間&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;;&lt;/span&gt;

&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;-- 指定要更新資料的主鍵
&lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;UPDATE&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;`&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;notification&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;`&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;SET&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;status&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;已讀&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;WHERE&lt;/span&gt;  &lt;span style=&#34;color:#000&#34;&gt;id&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;IN&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;2&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;3&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;刪除資料較佳作法&#34;&gt;刪除資料（較佳作法）&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;-- 先撈取資料
&lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;SELECT&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;`&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;backup&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;`&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;WHERE&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;created_at&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;&amp;lt;&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#39;現在時間&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;;&lt;/span&gt;

&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;-- 指定要刪除資料的主鍵
&lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;DELETE&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;FROM&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;`&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;backup&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;`&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;WHERE&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;id&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;IN&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;2&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;3&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;在服務會有大量的人撈取資料的時候，這樣可以避免不必要的資料鎖定，也可以讓存取速度加快喔～&lt;/p&gt;
&lt;h2 id=&#34;參考資料&#34;&gt;參考資料&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://blog.kejyun.com/2012/12/Tips-For-Use-MySQL-With-High-Performance.html&#34;&gt;KeJyun學習日誌: 提高存取MySQL效率小技巧&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

      </description>
    </item>
    
    <item>
      <title>Docs: 資料庫</title>
      <link>https://high-scaling-websites-structure-for-newbie.kejyun.com/docs/database/</link>
      <pubDate>Sat, 17 Apr 2021 08:50:29 +0800</pubDate>
      
      <guid>https://high-scaling-websites-structure-for-newbie.kejyun.com/docs/database/</guid>
      <description>
        
        
        
      </description>
    </item>
    
    <item>
      <title>Docs: 索引</title>
      <link>https://high-scaling-websites-structure-for-newbie.kejyun.com/docs/database/mysql/db-index/</link>
      <pubDate>Sat, 17 Apr 2021 08:50:29 +0800</pubDate>
      
      <guid>https://high-scaling-websites-structure-for-newbie.kejyun.com/docs/database/mysql/db-index/</guid>
      <description>
        
        
        &lt;h2 id=&#34;索引順序&#34;&gt;索引順序&lt;/h2&gt;
&lt;p&gt;在所有的資料庫內，建立索引是提昇資料庫資料存取效率的很重要的方式，但是錯誤的&lt;code&gt;索引順序&lt;/code&gt;或是 &lt;code&gt;SQL 語法&lt;/code&gt; 都可能讓查詢語法變成了 slow query。&lt;/p&gt;
&lt;p&gt;假設我們有一個部落格文章的資料表，裡頭存放所有使用者的部落格文章，資料表資料如下：&lt;/p&gt;
&lt;h3 id=&#34;posts&#34;&gt;posts&lt;/h3&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;post_id&lt;/th&gt;
&lt;th style=&#34;text-align:center&#34;&gt;post_status&lt;/th&gt;
&lt;th style=&#34;text-align:center&#34;&gt;author&lt;/th&gt;
&lt;th style=&#34;text-align:center&#34;&gt;content&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;正常&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;kejyun&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;文章 1&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;2&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;刪除&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;kejyun&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;文章 2&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;3&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;正常&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;kejyun&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;文章 3&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;4&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;正常&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;kj&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;文章 4&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;5&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;刪除&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;kj&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;文章 5&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;如果我們要撈取 &lt;code&gt;作者為 kejyun&lt;/code&gt; 且 &lt;code&gt;狀態正常&lt;/code&gt; 的文章，我們可能會用下列語法去撈取&lt;/p&gt;
&lt;h3 id=&#34;sql-語法-1&#34;&gt;SQL 語法 1&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;SELECT&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;*&lt;/span&gt;
&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;FROM&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;posts&lt;/span&gt;
&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;WHERE&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;post_status&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#39;正常&amp;#39;&lt;/span&gt;
&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;AND&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;author&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#39;kejyun&amp;#39;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;或者用這個語法撈取&lt;/p&gt;
&lt;h3 id=&#34;sql-語法-2&#34;&gt;SQL 語法 2&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;SELECT&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;*&lt;/span&gt;
&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;FROM&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;posts&lt;/span&gt;
&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;WHERE&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;author&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#39;kejyun&amp;#39;&lt;/span&gt;
&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;AND&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;post_status&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#39;正常&amp;#39;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;這兩句 SQL 語法都可以撈出我們想要的結果，但是對於不同的索引執行的效率卻是差異很多&lt;/p&gt;
&lt;p&gt;如果我們的索引是 &lt;code&gt;post_status&lt;/code&gt;、&lt;code&gt;author&lt;/code&gt; 的順序，&lt;code&gt;SQL 語法 1&lt;/code&gt; 則會正確的使用索引來做查詢，執行的效率會很快。&lt;/p&gt;
&lt;p&gt;但是對於&lt;code&gt;SQL 語法 2&lt;/code&gt;，會因為找不到適合該語法的索引去做查詢，所以會變成不使用索引，而對整個資料表作完整的檢索，去查找出資料來。&lt;/p&gt;
&lt;h4 id=&#34;主要原因是&#34;&gt;主要原因是&lt;/h4&gt;
&lt;blockquote&gt;
&lt;p&gt;在 SQL 語法 WHERE 的順序會影響查詢索引的順序&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;同樣的索引資料在不同的順序，表示為不同的索引，所以 &lt;code&gt;post_status、author&lt;/code&gt; 與 &lt;code&gt;author、post_status&lt;/code&gt; 這兩個索引雖然是使用相同的資料欄位，但因為順序不同所帶來的查詢效果也不同&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;同一句 SQL 語法只能使用單一個索引，所以不同的索引沒辦法共用&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;資料庫沒有這麼人工智慧，會去判斷兩個 SQL 語法可以使用相同的索引去查找出相同的資料，他會依照程式設計師給的語法，依序去查找是否有可用的索引。&lt;/p&gt;
&lt;h4 id=&#34;分析-sql-語法-1&#34;&gt;分析 SQL 語法 1&lt;/h4&gt;
&lt;p&gt;在 &lt;code&gt;SQL 語法 1&lt;/code&gt; 中，我們 WHERE 的第 1 個條件是 &lt;code&gt;post_status = &#39;正常&#39;&lt;/code&gt;，所以資料庫會去查找有沒有索引開頭是使用 &lt;code&gt;post_status&lt;/code&gt; 的索引。&lt;/p&gt;
&lt;p&gt;若有該索引，則再判斷 WHERE 的第 2 個條件 &lt;code&gt;author = &#39;kejyun&#39;&lt;/code&gt;，所以資料庫會去查找有沒有索引開頭是使用 &lt;code&gt;post_status&lt;/code&gt; 的索引，且該索引的第 2 個索引是使用 &lt;code&gt;author&lt;/code&gt; 的索引。&lt;/p&gt;
&lt;p&gt;資料庫會一直判斷比較 SQL 語法 WHERE 條件與索引之間的順序關係，直到沒辦法匹配後，後面的沒辦法匹配索引則使用完整比對的方式去進行查詢&lt;/p&gt;
&lt;h4 id=&#34;分析-sql-語法-2&#34;&gt;分析 SQL 語法 2&lt;/h4&gt;
&lt;p&gt;在 &lt;code&gt;SQL 語法 2&lt;/code&gt; 中，我們 WHERE 的第 1 個條件是 &lt;code&gt;author = &#39;kejyun&#39;&lt;/code&gt; 但我們資料庫沒有建立索引開頭是使用 &lt;code&gt;author&lt;/code&gt; 的索引，所以只能對資料庫使用完整比對。&lt;/p&gt;
&lt;h3 id=&#34;原理&#34;&gt;原理&lt;/h3&gt;
&lt;p&gt;索引就像是書籍的目錄一樣，若以童話故事書為例，我們書中會收錄世界各國的故事，且每個故事有他自己的類型，像是奇幻、驚悚、傳說、神話。&lt;/p&gt;
&lt;p&gt;如果我們以國家當做大標題（e.g. 第 1 索引），以故事類型當作小標題（e.g. 第 2 索引），那麼書籍目錄會像：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;台灣
&lt;ul&gt;
&lt;li&gt;奇幻&lt;/li&gt;
&lt;li&gt;驚悚&lt;/li&gt;
&lt;li&gt;傳說&lt;/li&gt;
&lt;li&gt;神話&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;日本
&lt;ul&gt;
&lt;li&gt;奇幻&lt;/li&gt;
&lt;li&gt;驚悚&lt;/li&gt;
&lt;li&gt;傳說&lt;/li&gt;
&lt;li&gt;神話&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;歐美
&lt;ul&gt;
&lt;li&gt;奇幻&lt;/li&gt;
&lt;li&gt;驚悚&lt;/li&gt;
&lt;li&gt;傳說&lt;/li&gt;
&lt;li&gt;神話&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;印度
&lt;ul&gt;
&lt;li&gt;奇幻&lt;/li&gt;
&lt;li&gt;驚悚&lt;/li&gt;
&lt;li&gt;傳說&lt;/li&gt;
&lt;li&gt;神話&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;etc&amp;hellip;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;如果我們要找&lt;code&gt;台灣&lt;/code&gt;且類型為&lt;code&gt;傳說&lt;/code&gt;的童話故事，我們的目光會先移動到台灣的區段，然後在這個區塊下找到類型為&lt;code&gt;傳說&lt;/code&gt;的故事&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;台灣
&lt;ul&gt;
&lt;li&gt;奇幻&lt;/li&gt;
&lt;li&gt;驚悚&lt;/li&gt;
&lt;li&gt;&lt;em&gt;&lt;strong&gt;傳說&lt;/strong&gt;&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;神話&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;但是如果我們要找所有類型為&lt;code&gt;傳說&lt;/code&gt;的故事中，發生在&lt;code&gt;台灣&lt;/code&gt;的故事，依照步驟我們會希望先把所有&lt;code&gt;傳說&lt;/code&gt;的故事先列出來，再從這個目錄下去找屬於&lt;code&gt;台灣&lt;/code&gt;的故事，所以我們希望會看到像這樣的目錄（索引）：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;傳說
&lt;ul&gt;
&lt;li&gt;&lt;em&gt;&lt;strong&gt;台灣&lt;/strong&gt;&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;日本&lt;/li&gt;
&lt;li&gt;歐美&lt;/li&gt;
&lt;li&gt;印度&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;但是在這本故事書的目錄（索引）中，我們沒有看到這樣的目錄結構，所以我們沒辦法透過目錄快速的找到我們要看的所有類型為&lt;code&gt;傳說&lt;/code&gt;的章節資料，只好從頭到尾的去翻閱整本書，直到找到全部我們&lt;code&gt;傳說&lt;/code&gt;章節的故事，然後再從這些找出來的&lt;code&gt;傳說&lt;/code&gt;故事中，再去區別出哪些為&lt;code&gt;台灣&lt;/code&gt;的故事。&lt;/p&gt;
&lt;p&gt;所以目錄（索引）的規則就是希望看故事書的人要怎麼快速找到他想要的東西，當沒有我們可以參考的目錄的話，就像資料庫沒有可參考的索引一樣，就會找得比較慢（但還是找得出來）。&lt;/p&gt;
&lt;h3 id=&#34;結論&#34;&gt;結論&lt;/h3&gt;
&lt;p&gt;因為索引順序的不同，以及 SQL WHERE 條件順序的不同，會使得資料庫在使用索引進行查詢有不同的效率，所以要謹慎的使用索引及 SQL 語法，才能達到高效率的查詢結果。&lt;/p&gt;
&lt;h2 id=&#34;控制索引更新&#34;&gt;控制索引更新&lt;/h2&gt;
&lt;h3 id=&#34;關閉索引更新&#34;&gt;關閉索引更新：&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;ALTER&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;TABLE&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;table_name&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;DISABLE&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;KEYS&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;開啟索引更新&#34;&gt;開啟索引更新：&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;ALTER&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;TABLE&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;table_name&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;ENABLE&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;KEYS&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;MySQL在新增（INSERT）、刪除（DELETE）、更新（UPDATE）的時候會去更新現有的索引表，而更新索引表也需要花費一些時間，當異動一筆資料的時候，索引表也做一次的異動，但當在做大量資料異動的時候，例如異動1000筆資料，索引表也需要異動1000次，而其實我們只需要最後一次（最新）的異動就好了，前面的999次都是不需要做的索引表異動更新，所以在異動大量資料前，可以使用指令 &lt;code&gt;ALTER TABLE table_name DISABLE KEYS;&lt;/code&gt; 關閉索引更新，等異動完成後，再使用指令 &lt;code&gt;ALTER TABLE table_name ENABLE KEYS;&lt;/code&gt; 開啟索引更新。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;ALTER&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;TABLE&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;users&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;DISABLE&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;KEYS&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;;&lt;/span&gt;
&lt;span style=&#34;color:#a40000&#34;&gt;異動（&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;INSERT&lt;/span&gt;&lt;span style=&#34;color:#a40000&#34;&gt;、&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;DELETE&lt;/span&gt;&lt;span style=&#34;color:#a40000&#34;&gt;、&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;UPDATE&lt;/span&gt;&lt;span style=&#34;color:#a40000&#34;&gt;）大量資料&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;SQL語法&lt;/span&gt;
&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;ALTER&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;TABLE&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;users&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;ENABLE&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;KEYS&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;自定義hash-index做字串完整比對&#34;&gt;自定義Hash Index做字串完整比對&lt;/h2&gt;
&lt;p&gt;我們知道在對&lt;code&gt;字串（CHAR或VARCHAR）&lt;/code&gt;去做查找的時候效率會遠比對&lt;code&gt;整數（INT）&lt;/code&gt;查找還慢，因CRC32對字串做校驗後會回傳&lt;code&gt;整數的校驗碼&lt;/code&gt;，我們在資料表增加一個整數型態欄位，儲存要比對字串的校驗碼。&lt;/p&gt;
&lt;h3 id=&#34;crc32&#34;&gt;crc32&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;建立str 的 32 位迴圈冗余校驗碼多項式。這通常用於檢查傳輸的資料是否完整。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;由於 PHP 的整數是帶符號的，許多 crc32 校驗碼將返回負整數，因此你需要使用 sprintf() 或 printf() 的「%u」格式符來取得表示無符號 crc32 校驗碼的字串。
在原本實作email登入時會對email欄位做索引，所以會先去查找email字串欄位的資料，之後再去比對密碼是否正確，但若資料過多字串比對的效率會降低很多&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;SELECT&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;id&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;name&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;email&lt;/span&gt;
&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;FROM&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;user&lt;/span&gt;
&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;WHERE&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;email&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;kejyun@gmail.com&amp;#34;&lt;/span&gt;
&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;AND&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;password&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;xxx&amp;#34;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;我們加入了 &lt;code&gt;emailcrc&lt;/code&gt; 的欄位去儲存對 email 字串的校驗碼，再查找 email 字串欄位的資料前，先透過crc整數校驗碼快速過濾掉不可能的資料，之後再從少數的資料中做 email 字串欄位字串比對，如果資料量很大，這樣的效率會提升很多。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;SELECT&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;id&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;name&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;email&lt;/span&gt;
&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;FROM&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;user&lt;/span&gt;
&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;WHERE&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;emailcrc&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;CRC32&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;kejyun@gmail.com&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt;
&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;AND&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;email&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;kejyun@gmail.com&amp;#34;&lt;/span&gt;
&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;AND&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;password&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;xxx&amp;#34;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;這邊要注意的是沒辦法只使用 crc 校驗碼去當作唯一的條件，&lt;code&gt;不同的字串可能會出現相同的校驗碼&lt;/code&gt;，所以最後還是要對你要比對的字串做比對，避免查詢發生錯誤。&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;email&lt;/th&gt;
&lt;th style=&#34;text-align:center&#34;&gt;emailcrc&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;mailto:kejyun1@gmail.com&#34;&gt;kejyun1@gmail.com&lt;/a&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;1234567890&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;mailto:kejyun2@gmail.com&#34;&gt;kejyun2@gmail.com&lt;/a&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;1234567890&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2 id=&#34;參考資料&#34;&gt;參考資料&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://blog.kejyun.com/2012/12/Tips-For-Use-MySQL-With-High-Performance.html&#34;&gt;KeJyun學習日誌: 提高存取MySQL效率小技巧&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://blog.kejyun.com/2012/12/MySQL-Efficiency-Adjustment.html&#34;&gt;KeJyun學習日誌: MySQL效率調校&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.percona.com/files/presentations/WEBINAR-MySQL-Indexing-Best-Practices.pdf&#34;&gt;MySQL Indexing: Best Practices Slide PDF&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.percona.com/files/presentations/WEBINAR-tools-and-techniques-for-index-design.pdf&#34;&gt;Tools and Techniques for Index Design PDF Slide&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.percona.com/files/presentations/WEBINAR2012-02-Explain-Demystified.pdf&#34;&gt;EXPLAIN Demystified PDF slide&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.percona.com/files/presentations/percona-live/london-2012/PLUK2012-optimizing-mysql-configuration.pdf&#34;&gt;Optimizing MySQL Configuration PDF Slide&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://por.tw/Website_Design/PHP5/function.crc32.html&#34;&gt;PHP手冊 - crc32&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

      </description>
    </item>
    
    <item>
      <title>Docs: 鎖表 Lock Table</title>
      <link>https://high-scaling-websites-structure-for-newbie.kejyun.com/docs/database/mysql/table-lock/</link>
      <pubDate>Sat, 17 Apr 2021 08:50:29 +0800</pubDate>
      
      <guid>https://high-scaling-websites-structure-for-newbie.kejyun.com/docs/database/mysql/table-lock/</guid>
      <description>
        
        
        &lt;h1 id=&#34;鎖表&#34;&gt;鎖表&lt;/h1&gt;
&lt;h2 id=&#34;定義&#34;&gt;定義&lt;/h2&gt;
&lt;p&gt;在要更新資料表的資料時，&lt;code&gt;MySQL&lt;/code&gt;會將表資料鎖定無法讀取，直到資料異動完畢，&lt;code&gt;MyISAM&lt;/code&gt; 預設支援 &lt;code&gt;Table-level lock&lt;/code&gt;，而 &lt;code&gt;InnoDB&lt;/code&gt; 預設支援 &lt;code&gt;Row-level lock&lt;/code&gt;&lt;/p&gt;
&lt;h3 id=&#34;table-level-lock&#34;&gt;Table-level lock&lt;/h3&gt;
&lt;p&gt;資料表資料異動時，將「&lt;code&gt;整個資料表（Table）&lt;/code&gt;」都鎖定住無法讀取&lt;/p&gt;
&lt;h3 id=&#34;row-level-lock&#34;&gt;Row-level lock&lt;/h3&gt;
&lt;p&gt;資料表資料異動時，將「&lt;code&gt;要更新的資料列（row）&lt;/code&gt;」都鎖定住無法讀取&lt;/p&gt;
&lt;h2 id=&#34;注意事項&#34;&gt;注意事項&lt;/h2&gt;
&lt;p&gt;在使用 &lt;code&gt;Row-level lock&lt;/code&gt; 時必需要 &lt;code&gt;明確指定要異動資料的主鍵（Primary Key）&lt;/code&gt;，否則將會改用 &lt;code&gt;Table-level lock&lt;/code&gt; 去做資料表的異動&lt;/p&gt;
&lt;h2 id=&#34;範例&#34;&gt;範例&lt;/h2&gt;
&lt;p&gt;假設有 user 資料表，裡面有 id 與 name 的欄位，id 是主鍵&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;SQL&lt;/th&gt;
&lt;th style=&#34;text-align:center&#34;&gt;Table lock&lt;/th&gt;
&lt;th style=&#34;text-align:center&#34;&gt;Row lock&lt;/th&gt;
&lt;th style=&#34;text-align:center&#34;&gt;No lock&lt;/th&gt;
&lt;th style=&#34;text-align:center&#34;&gt;備註&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;SELECT * FROM user WHERE id=&amp;lsquo;1&amp;rsquo; FOR UPDATE;&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;-&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;v&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;-&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;明確指定主鍵，並且有此筆資料，row lock&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;SELECT * FROM user WHERE id=&#39;-1&#39; FOR UPDATE;&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;-&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;-&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;v&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;明確指定主鍵，若查無此筆資料，無 lock&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;SELECT * FROM user WHERE name=&amp;lsquo;KeJyun&amp;rsquo; FOR UPDATE;&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;v&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;-&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;-&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;無主鍵，table lock&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;SELECT * FROM user WHERE id&amp;lt;&amp;gt;&amp;lsquo;1&amp;rsquo; FOR UPDATE;&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;v&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;-&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;-&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;主鍵不明確，table lock&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;SELECT * FROM user WHERE id LIKE &amp;lsquo;3&amp;rsquo; FOR UPDATE;&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;v&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;-&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;-&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;主鍵不明確，table lock&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2 id=&#34;備註&#34;&gt;備註&lt;/h2&gt;
&lt;p&gt;FOR UPDATE 僅適用於 InnoDB，且必須在交易區塊(BEGIN/COMMIT)中才能生效。&lt;/p&gt;
&lt;h2 id=&#34;參考資料&#34;&gt;參考資料&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://blog.kejyun.com/2012/12/Compare-Tabel-And-Row-Level-Lock-On-MySQL.html&#34;&gt;KeJyun學習日誌: MySQL鎖表(Lock Table)Table-level與Row-level比較&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

      </description>
    </item>
    
    <item>
      <title>Docs: 交易 Transaction</title>
      <link>https://high-scaling-websites-structure-for-newbie.kejyun.com/docs/database/mysql/transaction/</link>
      <pubDate>Sat, 17 Apr 2021 08:50:29 +0800</pubDate>
      
      <guid>https://high-scaling-websites-structure-for-newbie.kejyun.com/docs/database/mysql/transaction/</guid>
      <description>
        
        
        &lt;h2 id=&#34;控制innodb-transaction&#34;&gt;控制InnoDB Transaction&lt;/h2&gt;
&lt;h3 id=&#34;關閉自動提交&#34;&gt;關閉自動提交：&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;SET&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;autocommit&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;開啟自動提交&#34;&gt;開啟自動提交：&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;SET&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;autocommit&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;在 MySQL InnoDB 預設所有的資料異動都是 &lt;code&gt;Transaction（交易）&lt;/code&gt;，當與資料庫做連線的時候，InnoDB 會採用&lt;code&gt;自動提交（autocommit）&lt;/code&gt;的方式，所以除非使用 &lt;code&gt;BEGIN;&lt;/code&gt; 及 &lt;code&gt;COMMIT;&lt;/code&gt; 將異動語法包覆起來&lt;em&gt;&lt;strong&gt;設定為同一個  Transaction，否則任何一個資料異動的語法（INSERT、DELETE、UPDATE）會認為是一個獨立的 Transaction&lt;/strong&gt;&lt;/em&gt;。&lt;/p&gt;
&lt;p&gt;所以資料表每次做資料異動的時候會一直&lt;code&gt;提交 (COMMIT)&lt;/code&gt; 去更新日誌，若有 1000筆 獨立的SQL要執行就會被 COMMIT 1000 次，所以在下異動語法之前，可以使用指令 &lt;code&gt;SET autocommit=0;&lt;/code&gt; 關閉自動提交，等異動完成後，再使用指令 &lt;code&gt;SET autocommit=1;&lt;/code&gt; 開啟自動提交。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;SET&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;autocommit&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;;&lt;/span&gt;
&lt;span style=&#34;color:#a40000&#34;&gt;異動（&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;INSERT&lt;/span&gt;&lt;span style=&#34;color:#a40000&#34;&gt;、&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;DELETE&lt;/span&gt;&lt;span style=&#34;color:#a40000&#34;&gt;、&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;UPDATE&lt;/span&gt;&lt;span style=&#34;color:#a40000&#34;&gt;）大量資料&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;SQL語法&lt;/span&gt;
&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;SET&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;autocommit&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;參考資料&#34;&gt;參考資料&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://blog.kejyun.com/2012/12/MySQL-Efficiency-Adjustment.html&#34;&gt;KeJyun學習日誌: MySQL效率調校&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

      </description>
    </item>
    
    <item>
      <title>Docs: 伺服器</title>
      <link>https://high-scaling-websites-structure-for-newbie.kejyun.com/docs/database/mysql/server/</link>
      <pubDate>Sat, 17 Apr 2021 08:50:29 +0800</pubDate>
      
      <guid>https://high-scaling-websites-structure-for-newbie.kejyun.com/docs/database/mysql/server/</guid>
      <description>
        
        
        &lt;h2 id=&#34;設定&#34;&gt;設定&lt;/h2&gt;
&lt;h3 id=&#34;max_allowed_packet允許最大封包&#34;&gt;max_allowed_packet：允許最大封包&lt;/h3&gt;
&lt;p&gt;在INSERT或UPDATE的時候，因為封包資料過大，導致錯誤發生&lt;/p&gt;
&lt;h3 id=&#34;max_connect_errors最大連線錯誤&#34;&gt;max_connect_errors：最大連線錯誤&lt;/h3&gt;
&lt;p&gt;設 4294967295，可以避免當 client (像是 php) 發生太多錯誤時被 block 住。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;default 0，請設定一個最大的值即可，32位元的系統 最大是 4bytes 4294967295、64位元的系統最大是 18446744073709547520&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;參考資料&#34;&gt;參考資料&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://mini.nidbox.com/diary/read/7451092&#34;&gt;note: mysql 跟效能有關的設定 @ mini box 迷你小盒子 :: nidBox親子盒子&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

      </description>
    </item>
    
    <item>
      <title>Docs: SELECT 語法效能測試</title>
      <link>https://high-scaling-websites-structure-for-newbie.kejyun.com/docs/database/mysql/select-sql-explain-test/</link>
      <pubDate>Sat, 17 Apr 2021 08:50:29 +0800</pubDate>
      
      <guid>https://high-scaling-websites-structure-for-newbie.kejyun.com/docs/database/mysql/select-sql-explain-test/</guid>
      <description>
        
        
        &lt;h2 id=&#34;explain-做-sql-select-語法效能測試&#34;&gt;Explain 做 SQL SELECT 語法效能測試&lt;/h2&gt;
&lt;p&gt;在MySQL我們在使用 SELECT 做撈取資料的時候，有時候常常會效能低落，撈取資料需要很長的時間，有時候是 SQL 語法下得不好導致沒有使用到正確的索引去撈資料，我們這個時候就必須要檢查我們下的 SQL 語法到底有哪些地方需要改善，我建立的 comment 的資料表並新增幾筆假資料去做示範&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;-- 建立資料表
&lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;&lt;/span&gt;
&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;-- 留言
&lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;CREATE&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;TABLE&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;IF&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;NOT&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;EXISTS&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;`&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;comment&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;`&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;
  &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;`&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;id&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;`&lt;/span&gt; &lt;span style=&#34;color:#204a87&#34;&gt;int&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;10&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;unsigned&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;NOT&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;NULL&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;AUTO_INCREMENT&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;COMMENT&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#39;編號&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
  &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;`&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;content&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;`&lt;/span&gt; &lt;span style=&#34;color:#204a87&#34;&gt;varchar&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;50&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;COLLATE&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;utf8_unicode_ci&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;NOT&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;NULL&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;COMMENT&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#39;留言&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
  &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;PRIMARY&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;KEY&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;`&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;id&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;`&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt;
&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;ENGINE&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;InnoDB&lt;/span&gt;  &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;DEFAULT&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;CHARSET&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;utf8&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;COLLATE&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;utf8_unicode_ci&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;AUTO_INCREMENT&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;1&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;;&lt;/span&gt;

&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;-- 使用者
&lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;CREATE&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;TABLE&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;IF&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;NOT&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;EXISTS&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;`&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;user&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;`&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;
  &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;`&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;id&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;`&lt;/span&gt; &lt;span style=&#34;color:#204a87&#34;&gt;int&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;10&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;unsigned&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;NOT&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;NULL&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;AUTO_INCREMENT&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;COMMENT&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#39;編號&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
  &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;`&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;name&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;`&lt;/span&gt; &lt;span style=&#34;color:#204a87&#34;&gt;varchar&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;30&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;COLLATE&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;utf8_unicode_ci&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;NOT&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;NULL&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;COMMENT&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#39;姓名&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
  &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;PRIMARY&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;KEY&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;`&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;id&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;`&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt;
&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;ENGINE&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;InnoDB&lt;/span&gt;  &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;DEFAULT&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;CHARSET&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;utf8&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;COLLATE&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;utf8_unicode_ci&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;AUTO_INCREMENT&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;3&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;;&lt;/span&gt;

&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;-- 使用者的留言
&lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;CREATE&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;TABLE&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;IF&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;NOT&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;EXISTS&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;`&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;user_comment&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;`&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;
  &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;`&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;user_id&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;`&lt;/span&gt; &lt;span style=&#34;color:#204a87&#34;&gt;int&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;10&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;unsigned&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;NOT&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;NULL&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;COMMENT&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#39;使用者編號&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
  &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;`&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;comment_id&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;`&lt;/span&gt; &lt;span style=&#34;color:#204a87&#34;&gt;int&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;10&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;unsigned&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;NOT&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;NULL&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;COMMENT&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#39;評論編號&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
  &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;PRIMARY&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;KEY&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;`&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;user_id&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;`&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;`&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;comment_id&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;`&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt;
&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;ENGINE&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;InnoDB&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;DEFAULT&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;CHARSET&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;utf8&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;COLLATE&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;utf8_unicode_ci&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;;&lt;/span&gt;



&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;-- 新增資料
&lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;&lt;/span&gt;
&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;-- 留言
&lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;INSERT&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;INTO&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;`&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;comment&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;`&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;`&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;id&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;`&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;`&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;content&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;`&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;VALUES&lt;/span&gt;
&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#39;留言1&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;),&lt;/span&gt;
&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;2&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#39;留言2&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;);&lt;/span&gt;

&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;-- 使用者
&lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;INSERT&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;INTO&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;`&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;user&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;`&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;`&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;id&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;`&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;`&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;name&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;`&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;VALUES&lt;/span&gt;
&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#39;使用者1&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;),&lt;/span&gt;
&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;2&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#39;使用者2&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;);&lt;/span&gt;

&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;-- 使用者的留言
&lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;INSERT&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;INTO&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;`&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;user_comment&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;`&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;`&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;user_id&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;`&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;`&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;comment_id&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;`&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;VALUES&lt;/span&gt;
&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;),&lt;/span&gt;
&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;2&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;);&lt;/span&gt;




&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;-- 解釋MySQL語法效能
&lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;&lt;/span&gt;
&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;-- 撈取留言資料
&lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;EXPLAIN&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;SELECT&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;*&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;FROM&lt;/span&gt;  &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;`&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;comment&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;`&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;WHERE&lt;/span&gt;  &lt;span style=&#34;color:#000&#34;&gt;id&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;`&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;2&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;;&lt;/span&gt;

&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;-- 撈取使用者的留言資料
&lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;EXPLAIN&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;SELECT&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;*&lt;/span&gt;
&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;FROM&lt;/span&gt;  &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;`&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;comment&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;`&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;c&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;  &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;`&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;user&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;`&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;u&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;  &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;`&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;user_comment&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;`&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;uc&lt;/span&gt;
&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;WHERE&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;u&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;`&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;id&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;`&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;uc&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;`&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;user_id&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;`&lt;/span&gt;
&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;AND&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;uc&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;`&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;comment_id&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;`&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;c&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;`&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;id&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;`&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;解釋-mysql-語法效能撈取留言資料&#34;&gt;解釋 MySQL 語法效能：撈取留言資料&lt;/h2&gt;
&lt;p&gt;&lt;img src=&#34;http://3.bp.blogspot.com/-YagV7ODyhPI/UNLeKtvO_uI/AAAAAAAAC8k/v4NrdlhZnCo/s1600/2012-12-20_174153.png&#34; alt=&#34;Explain MySQL SQL&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;解釋mysql語法效能撈取留言資料&#34;&gt;解釋MySQL語法效能：撈取留言資料&lt;/h2&gt;
&lt;p&gt;&lt;img src=&#34;http://4.bp.blogspot.com/-7EtC6Ep0cbY/UNLjeYCIEPI/AAAAAAAAC88/chZ1hCB5rrs/s1600/2012-12-20_180223.png&#34; alt=&#34;解釋MySQL語法效能：撈取留言資料&#34;&gt;&lt;/p&gt;
&lt;p&gt;而EXPLAIN後的資料有下面這些欄位&lt;/p&gt;
&lt;h3 id=&#34;select_type&#34;&gt;select_type&lt;/h3&gt;
&lt;h3 id=&#34;table&#34;&gt;table&lt;/h3&gt;
&lt;p&gt;關連到的資料表&lt;/p&gt;
&lt;h3 id=&#34;type&#34;&gt;type&lt;/h3&gt;
&lt;p&gt;使用關聯查詢的類型(效率由好至壞排序)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;System&lt;/li&gt;
&lt;li&gt;const&lt;/li&gt;
&lt;li&gt;eq_ref&lt;/li&gt;
&lt;li&gt;ref&lt;/li&gt;
&lt;li&gt;fulltext&lt;/li&gt;
&lt;li&gt;ref_or_null&lt;/li&gt;
&lt;li&gt;index_merge&lt;/li&gt;
&lt;li&gt;unique_subquery&lt;/li&gt;
&lt;li&gt;index_subquery&lt;/li&gt;
&lt;li&gt;range&lt;/li&gt;
&lt;li&gt;index&lt;/li&gt;
&lt;li&gt;ALL&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;possible_keys&#34;&gt;possible_keys&lt;/h3&gt;
&lt;p&gt;可能使用到的索引，從WHERE語法選擇出一個適合的欄位&lt;/p&gt;
&lt;h3 id=&#34;key&#34;&gt;key&lt;/h3&gt;
&lt;p&gt;實際使用到的索引，如果為NULL，則是沒有使用索引&lt;/p&gt;
&lt;h3 id=&#34;key_len&#34;&gt;key_len&lt;/h3&gt;
&lt;p&gt;使用索引的長度，長度越短 準確性越高&lt;/p&gt;
&lt;h3 id=&#34;ref&#34;&gt;ref&lt;/h3&gt;
&lt;p&gt;顯示那一列的索引被使用，一般是一個常數(const)&lt;/p&gt;
&lt;h3 id=&#34;rows&#34;&gt;rows&lt;/h3&gt;
&lt;p&gt;MySQL用來返回資料的筆數，可以簡單的把rows視為執行效能，越少越好&lt;/p&gt;
&lt;h3 id=&#34;extra&#34;&gt;Extra&lt;/h3&gt;
&lt;p&gt;MySQL用來解析額外的查詢訊息&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Distinct&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;當MySQL找到相關連的資料時，就不再搜尋。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Not exists&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;MySQL優化 LEFT JOIN，一旦找到符合的LEFT JOIN資料後，就不再搜尋。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Range checked for each Record(index map:#)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;無法找到理想的索引。此為最慢的使用索引。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Using filesort&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;當出現這個值時，表示此SELECT語法需要優化。因為MySQL必須進行額外的步驟來進行查詢。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Using index&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;返回的資料是從索引中資料，而不是從實際的資料中返回，當返回的資料都出現在索引中的資料時就會發生此情況。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Using temporary&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;同Using filesort，表示此SELECT語法需要進行優化。此為MySQL必須建立一個暫時的資料表(Table)來儲存結果，此情況會發生在針對不同的資料進行ORDER BY，而不是GROUP BY。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Using where&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;使用WHERE語法中的欄位來返回結果。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;System&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;system資料表，此為const連接類型的特殊情況。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Const&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;資料表中的一個記錄的最大值能夠符合這個查詢。因為只有一行，這個值就是常數，因為MySQL會先讀這個值然後把它當做常數。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;eq_ref&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;MySQL在連接查詢時，會從最前面的資料表，對每一個記錄的聯合，從資料表中讀取一個記錄，在查詢時會使用索引為主鍵或唯一鍵的全部。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;ref&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;只有在查詢使用了非唯一鍵或主鍵時才會發生。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;range&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;使用索引返回一個範圍的結果。例如：使用大於&amp;gt;或小於&amp;lt;查詢時發生。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;index&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;此為針對索引中的資料進行查詢。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;ALL&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;針對每一筆記錄進行完全掃描，此為最壞的情況，應該盡量避免。&lt;/p&gt;
&lt;h2 id=&#34;結論&#34;&gt;結論&lt;/h2&gt;
&lt;p&gt;MySQL 的 Explain 可以分析大部份的 SQL 語法效能，但有些語法像是 WHERE IN 則會被歸類為 range 的語法，但實際上則是 Using Where，所以確切的語法分析要再看看文件真正的用法去決定&lt;/p&gt;
&lt;h2 id=&#34;參考資料&#34;&gt;參考資料&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://blog.kejyun.com/2012/12/Using-EXPLAIN-SQL-To-Analysis-Efficient-On-MySQL.html&#34;&gt;KeJyun學習日誌: 在MySQL使用Explain做SQL SELECT語法效能測試&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

      </description>
    </item>
    
  </channel>
</rss>
