<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>High Scaling Websites 大型網站架構菜雞修煉場 – break up server</title>
    <link>https://high-scaling-websites-structure-for-newbie.kejyun.com/tags/break-up-server/</link>
    <description>Recent content in break up server on High Scaling Websites 大型網站架構菜雞修煉場</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh</language>
    <lastBuildDate>Sat, 17 Apr 2021 08:50:29 +0800</lastBuildDate>
    
	  <atom:link href="https://high-scaling-websites-structure-for-newbie.kejyun.com/tags/break-up-server/index.xml" rel="self" type="application/rss+xml" />
    
    
      
        
      
    
    
    <item>
      <title>Docs: Web 與 Database 分手</title>
      <link>https://high-scaling-websites-structure-for-newbie.kejyun.com/docs/architecture-evolution/break-up/</link>
      <pubDate>Sat, 17 Apr 2021 08:50:29 +0800</pubDate>
      
      <guid>https://high-scaling-websites-structure-for-newbie.kejyun.com/docs/architecture-evolution/break-up/</guid>
      <description>
        
        
        &lt;p&gt;當服務越來越多人需要去同時存取時，原本的 &lt;code&gt;Web&lt;/code&gt; 與 &lt;code&gt;Database 在一起&lt;/code&gt; 的架構會變得不敷使用了，網站的 &lt;code&gt;反應時間&lt;/code&gt; 會變得越來越慢，伺服器的 &lt;code&gt;CPU&lt;/code&gt; 及 &lt;code&gt;記憶體&lt;/code&gt; 的消耗也會變得越來越高。&lt;/p&gt;
&lt;p&gt;而且服務彼此還會互相搶機器的資源，若機器發生問題導致資料庫的資料也出現問題，會造成的麻煩會變得更大，於是我們就會想要把 Web 與 Database 的機器相互分離。&lt;/p&gt;
&lt;p&gt;當用這樣的架構之後，你會發現效率會比之前提高很多，服務彼此不會搶資源了，但是就是要付出 $ 去添購機器摟（當可以用 $ 解決的問題都是小問題）&lt;/p&gt;
&lt;p&gt;&lt;em&gt;&lt;strong&gt;架構圖：&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;../images/architecture-evolution-break-up.png&#34; alt=&#34;Web 與 Database 分手&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;使用時機&#34;&gt;使用時機&lt;/h2&gt;
&lt;h3 id=&#34;同時上線人數約-20--40-人左右&#34;&gt;同時上線人數約 20 ~ 40 人左右&lt;/h3&gt;
&lt;p&gt;&lt;em&gt;&lt;strong&gt;人數為 KeJyun 過去經驗大概估算的人數，沒有經過實際測試僅參考用&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;當我們的服務能夠尤多台機器去分攤時，機器彼此的處理效率當然就會提高許多，可以乘載的人數也會提高&lt;/p&gt;
&lt;p&gt;以飲料店來當例子，1 個服務生可以同時服務 3 位客人（主機同時有 3 個人發出請求），但是若有 2 位服務生就可以同時服務 6 位客人（主機同時有 6 個人發出請求），
將替客人做點餐結帳、做飲料的工作做分工處理，一為服務生同時可以替 6 位客人做點餐結帳的工作，另一位則可以同時替 6 為客人做飲料，整個服務可以乘載的量就會提高很多，
讓每個人專心做一件事情，效率也會提高很多&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;同時上線非每日上限，同日上線指的是同一時先有多個人同時跟伺服器要資源&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;需要維持一定的服務可用度&#34;&gt;需要維持一定的服務可用度&lt;/h3&gt;
&lt;p&gt;當服務需要提供比較多人去做存取時，我們就必須要提供一定水準的服務可用度，將反應時間保持在 1 ~ 2 秒內的範圍。&lt;/p&gt;
&lt;h3 id=&#34;資料定期備份&#34;&gt;資料定期備份&lt;/h3&gt;
&lt;p&gt;雖然服務還在剛起步的階段，但是資料還是非常重要的公司資產，若只有一台 Database，我們還是需要定期的將資料備份出來（最少 1 天備援一次），避免機器掛掉的機會。&lt;/p&gt;
&lt;h2 id=&#34;參考資料&#34;&gt;參考資料&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://www.9streets.cn/art-php-489.html&#34;&gt;一步步構建大型網站架構- 架構設計- | 九街| 白開水的博客&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

      </description>
    </item>
    
  </channel>
</rss>
